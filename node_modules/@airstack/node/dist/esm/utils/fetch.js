import { request } from 'https';
export default function fetch(url, options) {
    return new Promise((resolve, reject) => {
        const req = request(url, options, (res) => {
            const data = [];
            res.on('data', (chunk) => {
                data.push(chunk);
            });
            res.on('end', () => {
                let dataObject = null;
                let error = null;
                const dataString = Buffer.concat(data).toString();
                try {
                    dataObject = JSON.parse(dataString);
                }
                catch (_a) {
                    error = dataString;
                }
                resolve({
                    json: () => (error ? { error } : dataObject),
                });
            });
        }).on('error', (error) => {
            const errorMessage = typeof error === 'string' ? error : error.message;
            reject(errorMessage || 'Something went wrong');
        });
        req.write(options.body);
        req.end();
    });
}
//# sourceMappingURL=fetch.js.map